@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="~/css/Table2.css">



<div class="text-center">
   
    <div id="Welcome">
        Что будем кушать?
    </div>

    <div id="table">
        <table class="table2">
            <tr>
            <th width="250">Блюдо</th>
            <th width="150">Цена</th>
            <th width="150">Общая цена</th>
            <th width="150">Количество</th>
            </tr>

            <tr v-for="item in data">
            <td>
                <input type="hidden" v-model="item.id" />
                <input v-model="item.name" readonly/>
            </td>
            <td>
                <input v-model="item.price" readonly/>
            </td>
            <td>
                <input readonly/>
            </td>
            <td>
                <div class="plus-minus">
                        <button class="minus" v-on:click="DecCount(item)">-</button>
                        <div>{{item.count}}</div>
                        <button class="plus" v-on:click="item.count += 1">+</button>
                </div>
            </td>
        </tr>
        </table>

        <button v-on:click="Order" class="Order">Заказать</button>
        <button v-on:click="logout" class="button" id="button_logout">Выйти</button>

        <div style="position:absolute;top:10px;right:100px;">
            Имя
            <input v-model="name" onchange="SetUserName(this.value)"/>
        </div>

        <div id="history">
        <div v-for="items in history" style="width:90px;display:inline-block;border:1px solid black">
            Заказ
            <div v-for="item in items">
                 {{item.product.price}} {{item.count}} {{item.product.name}} 
            </div>
            <br>
        </div>
        </div>
    </div>
    


    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="https://unpkg.com/vue@next"></script>
    <script src="~/js/air-datepicker.js"></script>
    <script>
        async function GetAllOrders() {
            return await fetch("home/GetAllOrders", {
                method: 'POST'
            })
        }
        async function GetProductsForOrder() {
            return await fetch("home/GetProductsForOrder",{
                method: 'POST'
            })
        }
        async function GetUserName() {
            return await fetch("home/GetUserName",{
                method: 'POST'
            })
        }
        async function SetUserName(value) {
            return await fetch("home/SetUserName",{
                method: 'POST',
                headers: {
                'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(value)
            })

            //$.ajax({
            //dataType: 'json',
            //contentType: "application/json",
            //type: "POST",
            //url: "/home/SetUserName",
            //data: {"name": value},
            //success: function (data) {                
            //},
            //error: function (er) {
            //    console.log(value);
            //}
            //});
        }

        const Table = {
        data() {            
            return {
                name: '',
                history: [],
                data: []
            }
        },
        async mounted() {
            const response = await GetProductsForOrder();
            console.log(response);
            let data = await response.json();
            this.data = data;
            for(let i = 0; i < data.length; i++){
            data[i].count = 0;   
            }

            const response1 = await GetAllOrders();
            let data1 = await response1.json();
            this.history = data1;

            const response2 = await GetUserName();
            this.name = await response2.text();
        },
        methods:{
            DecCount: function(item){
                if (item.count > 0)
                    item.count--
            },
                logout: function () {
                    fetch("account/logout", {
                        method: 'POST'
                    }).then(() => {
                        location.reload();
                    })
                },
             Order: async function(){
                 if(!this.name){
                    alert("Введите имя");
                 }
                 else{
                        let orders = new Array();
                        for (let i = 0; i < this.data.length; i++) {
                            orders.push({ ProductId: this.data[i].id, Count: this.data[i].count })
                        }
                        $.ajax({
                            dataType: 'json',
                            contentType: "application/json",
                            method: "post",
                            url: "/home/DoOrder",
                            data: JSON.stringify(orders),
                            success: function (data) {                                
                                alert("Успешно! Заказ принят.");                                
                            },
                            error: function (er) {
                            }
                        });
                        window.location.reload();                        
                    }           
                    return false;
            }
        }
    }

    Vue.createApp(Table).mount('#table')
        var group = { 'listofusers': listofusers };
        console.log(group);
        $.ajax({
            dataType: 'json',
            type: "POST",
            url: "/Home/GetMassiv",
            data: group,
            success: function (data) {                
            },
            error: function (data) {
            },
        });
    </script>
    <script>
    </script>
</div>
